/*
*冒泡算法 
* 1.比较相邻的元素，如果第一个比第二个大，就交换它们两个。
* 2.对每一对相邻的元素做同样的工作。从开始第一对到结尾最后一对，这样在最后的元素就是最大的值。
* 3.针对所有元素
* */
/**
 * 改进冒泡算法
 * 设置一个标志性变量 pos，用于记录每趟中最后一次进行交换的位置。
 * 因为再一次冒泡过程中，最后一次交换的位置之后的数据都是顺序的。
 * 由于pos位置之后的记录均已交换到位，故在进行下一趟排序时只要扫描到pos位置即可。
 */
function bubbleSort2(arr){
    console.time('改进后冒泡排序耗时');
    var i =arr.length-1;
    while(i>0){
        var pos = 0; // 每一次冒泡开始时，无记录交换
        for (var j = 0; j < i; j++) {
            if (arr[j]>arr[j+1]){
                pos=j;// 记录交换的位置
                var tmp = arr[j];
                arr[j]=arr[j+1];
                arr[j+1]=tmp;
            }
            i=pos; // pos作为下一次冒泡的终止位置
        }
        console.timeEnd('改进后冒泡排序耗时');
        return arr;
    }
}

var arr=[3,44,38,5,47,15,36,26,27,2,46,4,19,50,483,44,38,5,47,15,36,26,27,2,46,4,19,50,483,44,38,5,47,15,36,26,27,2,46,4,19,50,48];

console.log(bubbleSort2(arr));
